
myApp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  00000a14  00000aa8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a14  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  0080013c  0080013c  00000ae4  2**0
                  ALLOC
  3 .comment      00000012  00000000  00000000  00000ae4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000af8  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 000000a8  00000000  00000000  00000b38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   00001cbf  00000000  00000000  00000be0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 000009bb  00000000  00000000  0000289f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00001319  00000000  00000000  0000325a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000100  00000000  00000000  00004574  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    00000a2c  00000000  00000000  00004674  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_loc    00000a9f  00000000  00000000  000050a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges 00000018  00000000  00000000  00005b3f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e1       	ldi	r30, 0x14	; 20
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 33       	cpi	r26, 0x3C	; 60
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e3       	ldi	r26, 0x3C	; 60
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 34       	cpi	r26, 0x4A	; 74
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 8c 01 	call	0x318	; 0x318 <main>
  9e:	0c 94 08 05 	jmp	0xa10	; 0xa10 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z10write4bitsh>:
  a6:	cf 93       	push	r28
  a8:	e0 91 48 01 	lds	r30, 0x0148	; 0x800148 <LCD_PORT>
  ac:	f0 91 49 01 	lds	r31, 0x0149	; 0x800149 <LCD_PORT+0x1>
  b0:	c0 81       	ld	r28, Z
  b2:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <DB4>
  b6:	21 e0       	ldi	r18, 0x01	; 1
  b8:	30 e0       	ldi	r19, 0x00	; 0
  ba:	a9 01       	movw	r20, r18
  bc:	01 c0       	rjmp	.+2      	; 0xc0 <_Z10write4bitsh+0x1a>
  be:	44 0f       	add	r20, r20
  c0:	9a 95       	dec	r25
  c2:	ea f7       	brpl	.-6      	; 0xbe <_Z10write4bitsh+0x18>
  c4:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <DB5>
  c8:	d9 01       	movw	r26, r18
  ca:	01 c0       	rjmp	.+2      	; 0xce <_Z10write4bitsh+0x28>
  cc:	aa 0f       	add	r26, r26
  ce:	9a 95       	dec	r25
  d0:	ea f7       	brpl	.-6      	; 0xcc <_Z10write4bitsh+0x26>
  d2:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <DB6>
  d6:	b9 01       	movw	r22, r18
  d8:	01 c0       	rjmp	.+2      	; 0xdc <_Z10write4bitsh+0x36>
  da:	66 0f       	add	r22, r22
  dc:	9a 95       	dec	r25
  de:	ea f7       	brpl	.-6      	; 0xda <_Z10write4bitsh+0x34>
  e0:	90 91 3c 01 	lds	r25, 0x013C	; 0x80013c <DB7>
  e4:	01 c0       	rjmp	.+2      	; 0xe8 <_Z10write4bitsh+0x42>
  e6:	22 0f       	add	r18, r18
  e8:	9a 95       	dec	r25
  ea:	ea f7       	brpl	.-6      	; 0xe6 <_Z10write4bitsh+0x40>
  ec:	9a 2f       	mov	r25, r26
  ee:	94 2b       	or	r25, r20
  f0:	96 2b       	or	r25, r22
  f2:	92 2b       	or	r25, r18
  f4:	90 95       	com	r25
  f6:	9c 23       	and	r25, r28
  f8:	90 83       	st	Z, r25
  fa:	84 ff       	sbrs	r24, 4
  fc:	03 c0       	rjmp	.+6      	; 0x104 <_Z10write4bitsh+0x5e>
  fe:	50 81       	ld	r21, Z
 100:	54 2b       	or	r21, r20
 102:	50 83       	st	Z, r21
 104:	85 ff       	sbrs	r24, 5
 106:	03 c0       	rjmp	.+6      	; 0x10e <_Z10write4bitsh+0x68>
 108:	40 81       	ld	r20, Z
 10a:	4a 2b       	or	r20, r26
 10c:	40 83       	st	Z, r20
 10e:	86 ff       	sbrs	r24, 6
 110:	03 c0       	rjmp	.+6      	; 0x118 <_Z10write4bitsh+0x72>
 112:	90 81       	ld	r25, Z
 114:	96 2b       	or	r25, r22
 116:	90 83       	st	Z, r25
 118:	87 ff       	sbrs	r24, 7
 11a:	03 c0       	rjmp	.+6      	; 0x122 <_Z10write4bitsh+0x7c>
 11c:	80 81       	ld	r24, Z
 11e:	28 2b       	or	r18, r24
 120:	20 83       	st	Z, r18
 122:	cf 91       	pop	r28
 124:	08 95       	ret

00000126 <_Z15pulseEnableLinev>:
 126:	e0 91 44 01 	lds	r30, 0x0144	; 0x800144 <LCD_PORT_EN>
 12a:	f0 91 45 01 	lds	r31, 0x0145	; 0x800145 <LCD_PORT_EN+0x1>
 12e:	20 81       	ld	r18, Z
 130:	30 91 40 01 	lds	r19, 0x0140	; 0x800140 <LCD_EN>
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	ac 01       	movw	r20, r24
 13a:	01 c0       	rjmp	.+2      	; 0x13e <_Z15pulseEnableLinev+0x18>
 13c:	44 0f       	add	r20, r20
 13e:	3a 95       	dec	r19
 140:	ea f7       	brpl	.-6      	; 0x13c <_Z15pulseEnableLinev+0x16>
 142:	24 2b       	or	r18, r20
 144:	20 83       	st	Z, r18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 146:	2a e6       	ldi	r18, 0x6A	; 106
 148:	2a 95       	dec	r18
 14a:	f1 f7       	brne	.-4      	; 0x148 <_Z15pulseEnableLinev+0x22>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <_Z15pulseEnableLinev+0x28>
 14e:	e0 91 44 01 	lds	r30, 0x0144	; 0x800144 <LCD_PORT_EN>
 152:	f0 91 45 01 	lds	r31, 0x0145	; 0x800145 <LCD_PORT_EN+0x1>
 156:	20 81       	ld	r18, Z
 158:	30 91 40 01 	lds	r19, 0x0140	; 0x800140 <LCD_EN>
 15c:	01 c0       	rjmp	.+2      	; 0x160 <_Z15pulseEnableLinev+0x3a>
 15e:	88 0f       	add	r24, r24
 160:	3a 95       	dec	r19
 162:	ea f7       	brpl	.-6      	; 0x15e <_Z15pulseEnableLinev+0x38>
 164:	80 95       	com	r24
 166:	82 23       	and	r24, r18
 168:	80 83       	st	Z, r24
 16a:	08 95       	ret

0000016c <_Z9send_datah>:
 16c:	cf 93       	push	r28
 16e:	c8 2f       	mov	r28, r24
 170:	e0 91 46 01 	lds	r30, 0x0146	; 0x800146 <LCD_PORT_RS>
 174:	f0 91 47 01 	lds	r31, 0x0147	; 0x800147 <LCD_PORT_RS+0x1>
 178:	80 81       	ld	r24, Z
 17a:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <LCD_RS>
 17e:	21 e0       	ldi	r18, 0x01	; 1
 180:	30 e0       	ldi	r19, 0x00	; 0
 182:	01 c0       	rjmp	.+2      	; 0x186 <_Z9send_datah+0x1a>
 184:	22 0f       	add	r18, r18
 186:	9a 95       	dec	r25
 188:	ea f7       	brpl	.-6      	; 0x184 <_Z9send_datah+0x18>
 18a:	82 2b       	or	r24, r18
 18c:	80 83       	st	Z, r24
 18e:	8c 2f       	mov	r24, r28
 190:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10write4bitsh>
 194:	0e 94 93 00 	call	0x126	; 0x126 <_Z15pulseEnableLinev>
 198:	8c 2f       	mov	r24, r28
 19a:	82 95       	swap	r24
 19c:	80 7f       	andi	r24, 0xF0	; 240
 19e:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10write4bitsh>
 1a2:	0e 94 93 00 	call	0x126	; 0x126 <_Z15pulseEnableLinev>
 1a6:	85 ef       	ldi	r24, 0xF5	; 245
 1a8:	8a 95       	dec	r24
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <_Z9send_datah+0x3c>
 1ac:	00 00       	nop
 1ae:	cf 91       	pop	r28
 1b0:	08 95       	ret

000001b2 <_Z16send_data_stringPKc>:
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	ec 01       	movw	r28, r24
 1b8:	89 91       	ld	r24, Y+
 1ba:	88 23       	and	r24, r24
 1bc:	19 f0       	breq	.+6      	; 0x1c4 <_Z16send_data_stringPKc+0x12>
 1be:	0e 94 b6 00 	call	0x16c	; 0x16c <_Z9send_datah>
 1c2:	fa cf       	rjmp	.-12     	; 0x1b8 <_Z16send_data_stringPKc+0x6>
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	08 95       	ret

000001ca <_Z11lcd_commandh>:
 1ca:	cf 93       	push	r28
 1cc:	c8 2f       	mov	r28, r24
 1ce:	e0 91 46 01 	lds	r30, 0x0146	; 0x800146 <LCD_PORT_RS>
 1d2:	f0 91 47 01 	lds	r31, 0x0147	; 0x800147 <LCD_PORT_RS+0x1>
 1d6:	80 81       	ld	r24, Z
 1d8:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <LCD_RS>
 1dc:	21 e0       	ldi	r18, 0x01	; 1
 1de:	30 e0       	ldi	r19, 0x00	; 0
 1e0:	01 c0       	rjmp	.+2      	; 0x1e4 <_Z11lcd_commandh+0x1a>
 1e2:	22 0f       	add	r18, r18
 1e4:	9a 95       	dec	r25
 1e6:	ea f7       	brpl	.-6      	; 0x1e2 <_Z11lcd_commandh+0x18>
 1e8:	20 95       	com	r18
 1ea:	28 23       	and	r18, r24
 1ec:	20 83       	st	Z, r18
 1ee:	8c 2f       	mov	r24, r28
 1f0:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10write4bitsh>
 1f4:	0e 94 93 00 	call	0x126	; 0x126 <_Z15pulseEnableLinev>
 1f8:	8c 2f       	mov	r24, r28
 1fa:	82 95       	swap	r24
 1fc:	80 7f       	andi	r24, 0xF0	; 240
 1fe:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10write4bitsh>
 202:	0e 94 93 00 	call	0x126	; 0x126 <_Z15pulseEnableLinev>
 206:	80 ee       	ldi	r24, 0xE0	; 224
 208:	8a 95       	dec	r24
 20a:	f1 f7       	brne	.-4      	; 0x208 <_Z11lcd_commandh+0x3e>
 20c:	cf 91       	pop	r28
 20e:	08 95       	ret

00000210 <_Z9lcd_clearv>:
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	0e 94 e5 00 	call	0x1ca	; 0x1ca <_Z11lcd_commandh>
	__builtin_avr_delay_cycles(__ticks_dc);
 216:	8f e3       	ldi	r24, 0x3F	; 63
 218:	9f e1       	ldi	r25, 0x1F	; 31
 21a:	01 97       	sbiw	r24, 0x01	; 1
 21c:	f1 f7       	brne	.-4      	; 0x21a <_Z9lcd_clearv+0xa>
 21e:	00 c0       	rjmp	.+0      	; 0x220 <_Z9lcd_clearv+0x10>
 220:	00 00       	nop
 222:	08 95       	ret

00000224 <_Z15lcd_printNumberm>:
 224:	8f 92       	push	r8
 226:	9f 92       	push	r9
 228:	af 92       	push	r10
 22a:	bf 92       	push	r11
 22c:	df 92       	push	r13
 22e:	ef 92       	push	r14
 230:	ff 92       	push	r15
 232:	0f 93       	push	r16
 234:	1f 93       	push	r17
 236:	cf 93       	push	r28
 238:	df 93       	push	r29
 23a:	cd b7       	in	r28, 0x3d	; 61
 23c:	de b7       	in	r29, 0x3e	; 62
 23e:	c6 54       	subi	r28, 0x46	; 70
 240:	d1 09       	sbc	r29, r1
 242:	0f b6       	in	r0, 0x3f	; 63
 244:	f8 94       	cli
 246:	de bf       	out	0x3e, r29	; 62
 248:	0f be       	out	0x3f, r0	; 63
 24a:	cd bf       	out	0x3d, r28	; 61
 24c:	24 96       	adiw	r28, 0x04	; 4
 24e:	6f af       	std	Y+63, r22	; 0x3f
 250:	24 97       	sbiw	r28, 0x04	; 4
 252:	25 96       	adiw	r28, 0x05	; 5
 254:	7f af       	std	Y+63, r23	; 0x3f
 256:	25 97       	sbiw	r28, 0x05	; 5
 258:	26 96       	adiw	r28, 0x06	; 6
 25a:	8f af       	std	Y+63, r24	; 0x3f
 25c:	26 97       	sbiw	r28, 0x06	; 6
 25e:	27 96       	adiw	r28, 0x07	; 7
 260:	9f af       	std	Y+63, r25	; 0x3f
 262:	27 97       	sbiw	r28, 0x07	; 7
 264:	d1 2c       	mov	r13, r1
 266:	ce 01       	movw	r24, r28
 268:	82 96       	adiw	r24, 0x22	; 34
 26a:	7c 01       	movw	r14, r24
 26c:	8a e0       	ldi	r24, 0x0A	; 10
 26e:	88 2e       	mov	r8, r24
 270:	91 2c       	mov	r9, r1
 272:	a1 2c       	mov	r10, r1
 274:	b1 2c       	mov	r11, r1
 276:	4d 2d       	mov	r20, r13
 278:	50 e0       	ldi	r21, 0x00	; 0
 27a:	27 96       	adiw	r28, 0x07	; 7
 27c:	8c ad       	ldd	r24, Y+60	; 0x3c
 27e:	9d ad       	ldd	r25, Y+61	; 0x3d
 280:	ae ad       	ldd	r26, Y+62	; 0x3e
 282:	bf ad       	ldd	r27, Y+63	; 0x3f
 284:	27 97       	sbiw	r28, 0x07	; 7
 286:	89 2b       	or	r24, r25
 288:	8a 2b       	or	r24, r26
 28a:	8b 2b       	or	r24, r27
 28c:	71 f4       	brne	.+28     	; 0x2aa <_Z15lcd_printNumberm+0x86>
 28e:	97 01       	movw	r18, r14
 290:	24 0f       	add	r18, r20
 292:	35 1f       	adc	r19, r21
 294:	fe 01       	movw	r30, r28
 296:	31 96       	adiw	r30, 0x01	; 1
 298:	cf 01       	movw	r24, r30
 29a:	2e 15       	cp	r18, r14
 29c:	3f 05       	cpc	r19, r15
 29e:	19 f1       	breq	.+70     	; 0x2e6 <_Z15lcd_printNumberm+0xc2>
 2a0:	d9 01       	movw	r26, r18
 2a2:	6e 91       	ld	r22, -X
 2a4:	9d 01       	movw	r18, r26
 2a6:	61 93       	st	Z+, r22
 2a8:	f8 cf       	rjmp	.-16     	; 0x29a <_Z15lcd_printNumberm+0x76>
 2aa:	87 01       	movw	r16, r14
 2ac:	04 0f       	add	r16, r20
 2ae:	15 1f       	adc	r17, r21
 2b0:	27 96       	adiw	r28, 0x07	; 7
 2b2:	6c ad       	ldd	r22, Y+60	; 0x3c
 2b4:	7d ad       	ldd	r23, Y+61	; 0x3d
 2b6:	8e ad       	ldd	r24, Y+62	; 0x3e
 2b8:	9f ad       	ldd	r25, Y+63	; 0x3f
 2ba:	27 97       	sbiw	r28, 0x07	; 7
 2bc:	a5 01       	movw	r20, r10
 2be:	94 01       	movw	r18, r8
 2c0:	0e 94 48 03 	call	0x690	; 0x690 <__udivmodsi4>
 2c4:	60 5d       	subi	r22, 0xD0	; 208
 2c6:	d8 01       	movw	r26, r16
 2c8:	6c 93       	st	X, r22
 2ca:	24 96       	adiw	r28, 0x04	; 4
 2cc:	2f af       	std	Y+63, r18	; 0x3f
 2ce:	24 97       	sbiw	r28, 0x04	; 4
 2d0:	25 96       	adiw	r28, 0x05	; 5
 2d2:	3f af       	std	Y+63, r19	; 0x3f
 2d4:	25 97       	sbiw	r28, 0x05	; 5
 2d6:	26 96       	adiw	r28, 0x06	; 6
 2d8:	4f af       	std	Y+63, r20	; 0x3f
 2da:	26 97       	sbiw	r28, 0x06	; 6
 2dc:	27 96       	adiw	r28, 0x07	; 7
 2de:	5f af       	std	Y+63, r21	; 0x3f
 2e0:	27 97       	sbiw	r28, 0x07	; 7
 2e2:	d3 94       	inc	r13
 2e4:	c8 cf       	rjmp	.-112    	; 0x276 <_Z15lcd_printNumberm+0x52>
 2e6:	48 0f       	add	r20, r24
 2e8:	59 1f       	adc	r21, r25
 2ea:	fa 01       	movw	r30, r20
 2ec:	10 82       	st	Z, r1
 2ee:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <_Z16send_data_stringPKc>
 2f2:	ca 5b       	subi	r28, 0xBA	; 186
 2f4:	df 4f       	sbci	r29, 0xFF	; 255
 2f6:	0f b6       	in	r0, 0x3f	; 63
 2f8:	f8 94       	cli
 2fa:	de bf       	out	0x3e, r29	; 62
 2fc:	0f be       	out	0x3f, r0	; 63
 2fe:	cd bf       	out	0x3d, r28	; 61
 300:	df 91       	pop	r29
 302:	cf 91       	pop	r28
 304:	1f 91       	pop	r17
 306:	0f 91       	pop	r16
 308:	ff 90       	pop	r15
 30a:	ef 90       	pop	r14
 30c:	df 90       	pop	r13
 30e:	bf 90       	pop	r11
 310:	af 90       	pop	r10
 312:	9f 90       	pop	r9
 314:	8f 90       	pop	r8
 316:	08 95       	ret

00000318 <main>:
#include <util/delay.h>				// include inbuilt defined delay header file
#include <string.h> 				// function strcpy()
#include "LCD.h"					// include header for LCD functions
#include "LCD_PRINT.h"				// include header for LCD print-functions

int main() {
 318:	cd b7       	in	r28, 0x3d	; 61
 31a:	de b7       	in	r29, 0x3e	; 62
 31c:	6c 97       	sbiw	r28, 0x1c	; 28
 31e:	0f b6       	in	r0, 0x3f	; 63
 320:	f8 94       	cli
 322:	de bf       	out	0x3e, r29	; 62
 324:	0f be       	out	0x3f, r0	; 63
 326:	cd bf       	out	0x3d, r28	; 61
 328:	88 e2       	ldi	r24, 0x28	; 40
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <LCD_PORT+0x1>
 330:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <LCD_PORT>
 334:	85 e2       	ldi	r24, 0x25	; 37
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <LCD_PORT_RS+0x1>
 33c:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <LCD_PORT_RS>
 340:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <LCD_PORT_EN+0x1>
 344:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <LCD_PORT_EN>
 348:	84 e2       	ldi	r24, 0x24	; 36
 34a:	90 e0       	ldi	r25, 0x00	; 0
 34c:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <LCD_DDR_RS_EN+0x1>
 350:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <LCD_DDR_RS_EN>
 354:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <LCD_RS>
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <LCD_EN>
 35e:	82 e0       	ldi	r24, 0x02	; 2
 360:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <DB4>
 364:	83 e0       	ldi	r24, 0x03	; 3
 366:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <DB5>
 36a:	84 e0       	ldi	r24, 0x04	; 4
 36c:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <DB6>
 370:	85 e0       	ldi	r24, 0x05	; 5
 372:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <DB7>
 376:	87 b1       	in	r24, 0x07	; 7
 378:	8c 63       	ori	r24, 0x3C	; 60
 37a:	87 b9       	out	0x07, r24	; 7
 37c:	e0 91 42 01 	lds	r30, 0x0142	; 0x800142 <LCD_DDR_RS_EN>
 380:	f0 91 43 01 	lds	r31, 0x0143	; 0x800143 <LCD_DDR_RS_EN+0x1>
 384:	80 81       	ld	r24, Z
 386:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <LCD_RS>
 38a:	21 e0       	ldi	r18, 0x01	; 1
 38c:	30 e0       	ldi	r19, 0x00	; 0
 38e:	b9 01       	movw	r22, r18
 390:	01 c0       	rjmp	.+2      	; 0x394 <main+0x7c>
 392:	66 0f       	add	r22, r22
 394:	9a 95       	dec	r25
 396:	ea f7       	brpl	.-6      	; 0x392 <main+0x7a>
 398:	86 2b       	or	r24, r22
 39a:	80 83       	st	Z, r24
 39c:	80 81       	ld	r24, Z
 39e:	90 91 40 01 	lds	r25, 0x0140	; 0x800140 <LCD_EN>
 3a2:	a9 01       	movw	r20, r18
 3a4:	01 c0       	rjmp	.+2      	; 0x3a8 <main+0x90>
 3a6:	44 0f       	add	r20, r20
 3a8:	9a 95       	dec	r25
 3aa:	ea f7       	brpl	.-6      	; 0x3a6 <main+0x8e>
 3ac:	84 2b       	or	r24, r20
 3ae:	80 83       	st	Z, r24
 3b0:	e0 91 48 01 	lds	r30, 0x0148	; 0x800148 <LCD_PORT>
 3b4:	f0 91 49 01 	lds	r31, 0x0149	; 0x800149 <LCD_PORT+0x1>
 3b8:	50 81       	ld	r21, Z
 3ba:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <DB4>
 3be:	d9 01       	movw	r26, r18
 3c0:	02 c0       	rjmp	.+4      	; 0x3c6 <main+0xae>
 3c2:	aa 0f       	add	r26, r26
 3c4:	bb 1f       	adc	r27, r27
 3c6:	8a 95       	dec	r24
 3c8:	e2 f7       	brpl	.-8      	; 0x3c2 <main+0xaa>
 3ca:	cd 01       	movw	r24, r26
 3cc:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <DB5>
 3d0:	d9 01       	movw	r26, r18
 3d2:	01 c0       	rjmp	.+2      	; 0x3d6 <main+0xbe>
 3d4:	aa 0f       	add	r26, r26
 3d6:	9a 95       	dec	r25
 3d8:	ea f7       	brpl	.-6      	; 0x3d4 <main+0xbc>
 3da:	8a 2b       	or	r24, r26
 3dc:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <DB6>
 3e0:	d9 01       	movw	r26, r18
 3e2:	01 c0       	rjmp	.+2      	; 0x3e6 <main+0xce>
 3e4:	aa 0f       	add	r26, r26
 3e6:	9a 95       	dec	r25
 3e8:	ea f7       	brpl	.-6      	; 0x3e4 <main+0xcc>
 3ea:	8a 2b       	or	r24, r26
 3ec:	90 91 3c 01 	lds	r25, 0x013C	; 0x80013c <DB7>
 3f0:	01 c0       	rjmp	.+2      	; 0x3f4 <main+0xdc>
 3f2:	22 0f       	add	r18, r18
 3f4:	9a 95       	dec	r25
 3f6:	ea f7       	brpl	.-6      	; 0x3f2 <main+0xda>
 3f8:	82 2b       	or	r24, r18
 3fa:	80 95       	com	r24
 3fc:	85 23       	and	r24, r21
 3fe:	80 83       	st	Z, r24
 400:	e0 91 46 01 	lds	r30, 0x0146	; 0x800146 <LCD_PORT_RS>
 404:	f0 91 47 01 	lds	r31, 0x0147	; 0x800147 <LCD_PORT_RS+0x1>
 408:	80 81       	ld	r24, Z
 40a:	60 95       	com	r22
 40c:	68 23       	and	r22, r24
 40e:	60 83       	st	Z, r22
 410:	e0 91 44 01 	lds	r30, 0x0144	; 0x800144 <LCD_PORT_EN>
 414:	f0 91 45 01 	lds	r31, 0x0145	; 0x800145 <LCD_PORT_EN+0x1>
 418:	80 81       	ld	r24, Z
 41a:	40 95       	com	r20
 41c:	48 23       	and	r20, r24
 41e:	40 83       	st	Z, r20
 420:	bf ef       	ldi	r27, 0xFF	; 255
 422:	29 ef       	ldi	r18, 0xF9	; 249
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	b1 50       	subi	r27, 0x01	; 1
 428:	20 40       	sbci	r18, 0x00	; 0
 42a:	80 40       	sbci	r24, 0x00	; 0
 42c:	e1 f7       	brne	.-8      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 42e:	00 c0       	rjmp	.+0      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 430:	00 00       	nop
 432:	80 e3       	ldi	r24, 0x30	; 48
 434:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10write4bitsh>
	__builtin_avr_delay_cycles(__ticks_dc);
 438:	af e4       	ldi	r26, 0x4F	; 79
 43a:	b6 e4       	ldi	r27, 0x46	; 70
 43c:	11 97       	sbiw	r26, 0x01	; 1
 43e:	f1 f7       	brne	.-4      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 440:	00 c0       	rjmp	.+0      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 442:	00 00       	nop
 444:	80 e3       	ldi	r24, 0x30	; 48
 446:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10write4bitsh>
 44a:	8f e4       	ldi	r24, 0x4F	; 79
 44c:	96 e4       	ldi	r25, 0x46	; 70
 44e:	01 97       	sbiw	r24, 0x01	; 1
 450:	f1 f7       	brne	.-4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 452:	00 c0       	rjmp	.+0      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 454:	00 00       	nop
 456:	80 e3       	ldi	r24, 0x30	; 48
 458:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10write4bitsh>
 45c:	a7 e5       	ldi	r26, 0x57	; 87
 45e:	b2 e0       	ldi	r27, 0x02	; 2
 460:	11 97       	sbiw	r26, 0x01	; 1
 462:	f1 f7       	brne	.-4      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 464:	00 c0       	rjmp	.+0      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 466:	00 00       	nop
 468:	80 e2       	ldi	r24, 0x20	; 32
 46a:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10write4bitsh>
 46e:	88 e2       	ldi	r24, 0x28	; 40
 470:	0e 94 e5 00 	call	0x1ca	; 0x1ca <_Z11lcd_commandh>
 474:	8f e0       	ldi	r24, 0x0F	; 15
 476:	0e 94 e5 00 	call	0x1ca	; 0x1ca <_Z11lcd_commandh>
 47a:	86 e0       	ldi	r24, 0x06	; 6
 47c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <_Z11lcd_commandh>
 480:	0e 94 08 01 	call	0x210	; 0x210 <_Z9lcd_clearv>
 484:	88 e5       	ldi	r24, 0x58	; 88
 486:	0e 94 b6 00 	call	0x16c	; 0x16c <_Z9send_datah>
	__builtin_avr_delay_cycles(__ticks_dc);
 48a:	bf ef       	ldi	r27, 0xFF	; 255
 48c:	27 ea       	ldi	r18, 0xA7	; 167
 48e:	81 e6       	ldi	r24, 0x61	; 97
 490:	b1 50       	subi	r27, 0x01	; 1
 492:	20 40       	sbci	r18, 0x00	; 0
 494:	80 40       	sbci	r24, 0x00	; 0
 496:	e1 f7       	brne	.-8      	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 498:	00 c0       	rjmp	.+0      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 49a:	00 00       	nop
	lcd_init( &PORTB, PB0, PB1, &PORTC, PC2, PC3, PC4, PC5);
	
	lcd_print('X');	
	_delay_ms(2000);

	lcd_clear();
 49c:	0e 94 08 01 	call	0x210	; 0x210 <_Z9lcd_clearv>
	char str[24];
	strcpy(str, "Hello world");
 4a0:	60 e0       	ldi	r22, 0x00	; 0
 4a2:	71 e0       	ldi	r23, 0x01	; 1
 4a4:	8e 01       	movw	r16, r28
 4a6:	0f 5f       	subi	r16, 0xFF	; 255
 4a8:	1f 4f       	sbci	r17, 0xFF	; 255
 4aa:	c8 01       	movw	r24, r16
 4ac:	0e 94 01 05 	call	0xa02	; 0xa02 <strcpy>
 4b0:	c8 01       	movw	r24, r16
 4b2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <_Z16send_data_stringPKc>
 4b6:	9f ef       	ldi	r25, 0xFF	; 255
 4b8:	a7 ea       	ldi	r26, 0xA7	; 167
 4ba:	b1 e6       	ldi	r27, 0x61	; 97
 4bc:	91 50       	subi	r25, 0x01	; 1
 4be:	a0 40       	sbci	r26, 0x00	; 0
 4c0:	b0 40       	sbci	r27, 0x00	; 0
 4c2:	e1 f7       	brne	.-8      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4c4:	00 c0       	rjmp	.+0      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4c6:	00 00       	nop
	lcd_print(str);	
	_delay_ms(2000);
	
	lcd_clear();
 4c8:	0e 94 08 01 	call	0x210	; 0x210 <_Z9lcd_clearv>
	strcpy(str, "Integer");
 4cc:	65 e1       	ldi	r22, 0x15	; 21
 4ce:	71 e0       	ldi	r23, 0x01	; 1
 4d0:	c8 01       	movw	r24, r16
 4d2:	0e 94 01 05 	call	0xa02	; 0xa02 <strcpy>
 4d6:	c8 01       	movw	r24, r16
 4d8:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <_Z16send_data_stringPKc>
 4dc:	80 ec       	ldi	r24, 0xC0	; 192
 4de:	0e 94 e5 00 	call	0x1ca	; 0x1ca <_Z11lcd_commandh>
 4e2:	8d e2       	ldi	r24, 0x2D	; 45
 4e4:	0e 94 b6 00 	call	0x16c	; 0x16c <_Z9send_datah>
 4e8:	6f ef       	ldi	r22, 0xFF	; 255
 4ea:	7f e7       	ldi	r23, 0x7F	; 127
 4ec:	80 e0       	ldi	r24, 0x00	; 0
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	0e 94 12 01 	call	0x224	; 0x224 <_Z15lcd_printNumberm>
 4f4:	2f ef       	ldi	r18, 0xFF	; 255
 4f6:	87 ea       	ldi	r24, 0xA7	; 167
 4f8:	91 e6       	ldi	r25, 0x61	; 97
 4fa:	21 50       	subi	r18, 0x01	; 1
 4fc:	80 40       	sbci	r24, 0x00	; 0
 4fe:	90 40       	sbci	r25, 0x00	; 0
 500:	e1 f7       	brne	.-8      	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 502:	00 c0       	rjmp	.+0      	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 504:	00 00       	nop
	lcd_print(str);
	lcd_setcursor(0,1);
	lcd_print(-32767);
	_delay_ms(2000);
	
	lcd_clear();
 506:	0e 94 08 01 	call	0x210	; 0x210 <_Z9lcd_clearv>
	strcpy(str, "unsigned Integer");		
 50a:	6c e0       	ldi	r22, 0x0C	; 12
 50c:	71 e0       	ldi	r23, 0x01	; 1
 50e:	c8 01       	movw	r24, r16
 510:	0e 94 01 05 	call	0xa02	; 0xa02 <strcpy>
 514:	c8 01       	movw	r24, r16
 516:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <_Z16send_data_stringPKc>
 51a:	80 ec       	ldi	r24, 0xC0	; 192
 51c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <_Z11lcd_commandh>
 520:	6f ef       	ldi	r22, 0xFF	; 255
 522:	7f ef       	ldi	r23, 0xFF	; 255
 524:	80 e0       	ldi	r24, 0x00	; 0
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	0e 94 12 01 	call	0x224	; 0x224 <_Z15lcd_printNumberm>
 52c:	af ef       	ldi	r26, 0xFF	; 255
 52e:	b7 ea       	ldi	r27, 0xA7	; 167
 530:	21 e6       	ldi	r18, 0x61	; 97
 532:	a1 50       	subi	r26, 0x01	; 1
 534:	b0 40       	sbci	r27, 0x00	; 0
 536:	20 40       	sbci	r18, 0x00	; 0
 538:	e1 f7       	brne	.-8      	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 53a:	00 c0       	rjmp	.+0      	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 53c:	00 00       	nop
	lcd_print(str);
	lcd_setcursor(0,1);
	lcd_print(65535U);
	_delay_ms(2000);
	
	lcd_clear();
 53e:	0e 94 08 01 	call	0x210	; 0x210 <_Z9lcd_clearv>
	strcpy(str, "long");	
 542:	66 e2       	ldi	r22, 0x26	; 38
 544:	71 e0       	ldi	r23, 0x01	; 1
 546:	c8 01       	movw	r24, r16
 548:	0e 94 01 05 	call	0xa02	; 0xa02 <strcpy>
 54c:	c8 01       	movw	r24, r16
 54e:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <_Z16send_data_stringPKc>
 552:	80 ec       	ldi	r24, 0xC0	; 192
 554:	0e 94 e5 00 	call	0x1ca	; 0x1ca <_Z11lcd_commandh>
 558:	8d e2       	ldi	r24, 0x2D	; 45
 55a:	0e 94 b6 00 	call	0x16c	; 0x16c <_Z9send_datah>
 55e:	6f ef       	ldi	r22, 0xFF	; 255
 560:	7f ef       	ldi	r23, 0xFF	; 255
 562:	8f ef       	ldi	r24, 0xFF	; 255
 564:	9f e7       	ldi	r25, 0x7F	; 127
 566:	0e 94 12 01 	call	0x224	; 0x224 <_Z15lcd_printNumberm>
 56a:	8f ef       	ldi	r24, 0xFF	; 255
 56c:	97 ea       	ldi	r25, 0xA7	; 167
 56e:	a1 e6       	ldi	r26, 0x61	; 97
 570:	81 50       	subi	r24, 0x01	; 1
 572:	90 40       	sbci	r25, 0x00	; 0
 574:	a0 40       	sbci	r26, 0x00	; 0
 576:	e1 f7       	brne	.-8      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 578:	00 c0       	rjmp	.+0      	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 57a:	00 00       	nop
	lcd_print(str);
	lcd_setcursor(0,1);
	lcd_print(-2147483647);		
	_delay_ms(2000);

	lcd_clear();
 57c:	0e 94 08 01 	call	0x210	; 0x210 <_Z9lcd_clearv>
	strcpy(str, "unsigned long");			
 580:	6d e1       	ldi	r22, 0x1D	; 29
 582:	71 e0       	ldi	r23, 0x01	; 1
 584:	c8 01       	movw	r24, r16
 586:	0e 94 01 05 	call	0xa02	; 0xa02 <strcpy>
 58a:	c8 01       	movw	r24, r16
 58c:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <_Z16send_data_stringPKc>
 590:	80 ec       	ldi	r24, 0xC0	; 192
 592:	0e 94 e5 00 	call	0x1ca	; 0x1ca <_Z11lcd_commandh>
 596:	6f ef       	ldi	r22, 0xFF	; 255
 598:	7f ef       	ldi	r23, 0xFF	; 255
 59a:	cb 01       	movw	r24, r22
 59c:	0e 94 12 01 	call	0x224	; 0x224 <_Z15lcd_printNumberm>
 5a0:	bf ef       	ldi	r27, 0xFF	; 255
 5a2:	27 ea       	ldi	r18, 0xA7	; 167
 5a4:	81 e6       	ldi	r24, 0x61	; 97
 5a6:	b1 50       	subi	r27, 0x01	; 1
 5a8:	20 40       	sbci	r18, 0x00	; 0
 5aa:	80 40       	sbci	r24, 0x00	; 0
 5ac:	e1 f7       	brne	.-8      	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 5ae:	00 c0       	rjmp	.+0      	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5b0:	00 00       	nop
	lcd_print(str);
	lcd_setcursor(0,1);
	lcd_print(4294967295UL);		
	_delay_ms(2000);

	lcd_clear();
 5b2:	0e 94 08 01 	call	0x210	; 0x210 <_Z9lcd_clearv>
	strcpy(str, "double");			
 5b6:	6b e2       	ldi	r22, 0x2B	; 43
 5b8:	71 e0       	ldi	r23, 0x01	; 1
 5ba:	c8 01       	movw	r24, r16
 5bc:	0e 94 01 05 	call	0xa02	; 0xa02 <strcpy>
 5c0:	c8 01       	movw	r24, r16
 5c2:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <_Z16send_data_stringPKc>
 5c6:	80 ec       	ldi	r24, 0xC0	; 192
 5c8:	0e 94 e5 00 	call	0x1ca	; 0x1ca <_Z11lcd_commandh>
 5cc:	67 ee       	ldi	r22, 0xE7	; 231
 5ce:	7a e1       	ldi	r23, 0x1A	; 26
 5d0:	85 e0       	ldi	r24, 0x05	; 5
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	0e 94 12 01 	call	0x224	; 0x224 <_Z15lcd_printNumberm>
 5d8:	8e e2       	ldi	r24, 0x2E	; 46
 5da:	0e 94 b6 00 	call	0x16c	; 0x16c <_Z9send_datah>
 5de:	84 e0       	ldi	r24, 0x04	; 4
 5e0:	b8 2e       	mov	r11, r24
 5e2:	60 e0       	ldi	r22, 0x00	; 0
 5e4:	70 e0       	ldi	r23, 0x00	; 0
 5e6:	80 e0       	ldi	r24, 0x00	; 0
 5e8:	9e e3       	ldi	r25, 0x3E	; 62
 5ea:	ba 94       	dec	r11
 5ec:	bb 20       	and	r11, r11
 5ee:	c9 f1       	breq	.+114    	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 5f0:	20 e0       	ldi	r18, 0x00	; 0
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	40 e2       	ldi	r20, 0x20	; 32
 5f6:	51 e4       	ldi	r21, 0x41	; 65
 5f8:	69 8f       	std	Y+25, r22	; 0x19
 5fa:	7a 8f       	std	Y+26, r23	; 0x1a
 5fc:	8b 8f       	std	Y+27, r24	; 0x1b
 5fe:	9c 8f       	std	Y+28, r25	; 0x1c
 600:	69 8d       	ldd	r22, Y+25	; 0x19
 602:	7a 8d       	ldd	r23, Y+26	; 0x1a
 604:	8b 8d       	ldd	r24, Y+27	; 0x1b
 606:	9c 8d       	ldd	r25, Y+28	; 0x1c
 608:	0e 94 94 04 	call	0x928	; 0x928 <__mulsf3>
 60c:	76 2e       	mov	r7, r22
 60e:	87 2e       	mov	r8, r23
 610:	98 2e       	mov	r9, r24
 612:	a9 2e       	mov	r10, r25
 614:	69 8f       	std	Y+25, r22	; 0x19
 616:	7a 8f       	std	Y+26, r23	; 0x1a
 618:	8b 8f       	std	Y+27, r24	; 0x1b
 61a:	9c 8f       	std	Y+28, r25	; 0x1c
 61c:	69 8d       	ldd	r22, Y+25	; 0x19
 61e:	7a 8d       	ldd	r23, Y+26	; 0x1a
 620:	8b 8d       	ldd	r24, Y+27	; 0x1b
 622:	9c 8d       	ldd	r25, Y+28	; 0x1c
 624:	0e 94 d7 03 	call	0x7ae	; 0x7ae <__fixunssfsi>
 628:	6b 01       	movw	r12, r22
 62a:	80 e3       	ldi	r24, 0x30	; 48
 62c:	8c 0d       	add	r24, r12
 62e:	0e 94 b6 00 	call	0x16c	; 0x16c <_Z9send_datah>
 632:	c6 01       	movw	r24, r12
 634:	b0 e0       	ldi	r27, 0x00	; 0
 636:	a0 e0       	ldi	r26, 0x00	; 0
 638:	89 8f       	std	Y+25, r24	; 0x19
 63a:	9a 8f       	std	Y+26, r25	; 0x1a
 63c:	ab 8f       	std	Y+27, r26	; 0x1b
 63e:	bc 8f       	std	Y+28, r27	; 0x1c
 640:	b6 01       	movw	r22, r12
 642:	cd 01       	movw	r24, r26
 644:	0e 94 06 04 	call	0x80c	; 0x80c <__floatunsisf>
 648:	9b 01       	movw	r18, r22
 64a:	ac 01       	movw	r20, r24
 64c:	79 8e       	std	Y+25, r7	; 0x19
 64e:	8a 8e       	std	Y+26, r8	; 0x1a
 650:	9b 8e       	std	Y+27, r9	; 0x1b
 652:	ac 8e       	std	Y+28, r10	; 0x1c
 654:	69 8d       	ldd	r22, Y+25	; 0x19
 656:	7a 8d       	ldd	r23, Y+26	; 0x1a
 658:	8b 8d       	ldd	r24, Y+27	; 0x1b
 65a:	9c 8d       	ldd	r25, Y+28	; 0x1c
 65c:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <__subsf3>
 660:	c4 cf       	rjmp	.-120    	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 662:	9f ef       	ldi	r25, 0xFF	; 255
 664:	a7 ea       	ldi	r26, 0xA7	; 167
 666:	b1 e6       	ldi	r27, 0x61	; 97
 668:	91 50       	subi	r25, 0x01	; 1
 66a:	a0 40       	sbci	r26, 0x00	; 0
 66c:	b0 40       	sbci	r27, 0x00	; 0
 66e:	e1 f7       	brne	.-8      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 670:	00 c0       	rjmp	.+0      	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 672:	00 00       	nop
	lcd_print(str);
	lcd_setcursor(0,1);
	lcd_print(334567.123);		
	_delay_ms(2000);
	
	lcd_clear();
 674:	0e 94 08 01 	call	0x210	; 0x210 <_Z9lcd_clearv>
	strcpy(str, "Hannover");			
 678:	62 e3       	ldi	r22, 0x32	; 50
 67a:	71 e0       	ldi	r23, 0x01	; 1
 67c:	c8 01       	movw	r24, r16
 67e:	0e 94 01 05 	call	0xa02	; 0xa02 <strcpy>
 682:	81 ec       	ldi	r24, 0xC1	; 193
 684:	0e 94 e5 00 	call	0x1ca	; 0x1ca <_Z11lcd_commandh>
 688:	c8 01       	movw	r24, r16
 68a:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <_Z16send_data_stringPKc>
	lcd_print_xy(1, 1, str);
	
	while(1) {
 68e:	ff cf       	rjmp	.-2      	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>

00000690 <__udivmodsi4>:
 690:	a1 e2       	ldi	r26, 0x21	; 33
 692:	1a 2e       	mov	r1, r26
 694:	aa 1b       	sub	r26, r26
 696:	bb 1b       	sub	r27, r27
 698:	fd 01       	movw	r30, r26
 69a:	0d c0       	rjmp	.+26     	; 0x6b6 <__udivmodsi4_ep>

0000069c <__udivmodsi4_loop>:
 69c:	aa 1f       	adc	r26, r26
 69e:	bb 1f       	adc	r27, r27
 6a0:	ee 1f       	adc	r30, r30
 6a2:	ff 1f       	adc	r31, r31
 6a4:	a2 17       	cp	r26, r18
 6a6:	b3 07       	cpc	r27, r19
 6a8:	e4 07       	cpc	r30, r20
 6aa:	f5 07       	cpc	r31, r21
 6ac:	20 f0       	brcs	.+8      	; 0x6b6 <__udivmodsi4_ep>
 6ae:	a2 1b       	sub	r26, r18
 6b0:	b3 0b       	sbc	r27, r19
 6b2:	e4 0b       	sbc	r30, r20
 6b4:	f5 0b       	sbc	r31, r21

000006b6 <__udivmodsi4_ep>:
 6b6:	66 1f       	adc	r22, r22
 6b8:	77 1f       	adc	r23, r23
 6ba:	88 1f       	adc	r24, r24
 6bc:	99 1f       	adc	r25, r25
 6be:	1a 94       	dec	r1
 6c0:	69 f7       	brne	.-38     	; 0x69c <__udivmodsi4_loop>
 6c2:	60 95       	com	r22
 6c4:	70 95       	com	r23
 6c6:	80 95       	com	r24
 6c8:	90 95       	com	r25
 6ca:	9b 01       	movw	r18, r22
 6cc:	ac 01       	movw	r20, r24
 6ce:	bd 01       	movw	r22, r26
 6d0:	cf 01       	movw	r24, r30
 6d2:	08 95       	ret

000006d4 <__subsf3>:
 6d4:	50 58       	subi	r21, 0x80	; 128

000006d6 <__addsf3>:
 6d6:	bb 27       	eor	r27, r27
 6d8:	aa 27       	eor	r26, r26
 6da:	0e 94 82 03 	call	0x704	; 0x704 <__addsf3x>
 6de:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__fp_round>
 6e2:	0e 94 4c 04 	call	0x898	; 0x898 <__fp_pscA>
 6e6:	38 f0       	brcs	.+14     	; 0x6f6 <__addsf3+0x20>
 6e8:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__fp_pscB>
 6ec:	20 f0       	brcs	.+8      	; 0x6f6 <__addsf3+0x20>
 6ee:	39 f4       	brne	.+14     	; 0x6fe <__addsf3+0x28>
 6f0:	9f 3f       	cpi	r25, 0xFF	; 255
 6f2:	19 f4       	brne	.+6      	; 0x6fa <__addsf3+0x24>
 6f4:	26 f4       	brtc	.+8      	; 0x6fe <__addsf3+0x28>
 6f6:	0c 94 49 04 	jmp	0x892	; 0x892 <__fp_nan>
 6fa:	0e f4       	brtc	.+2      	; 0x6fe <__addsf3+0x28>
 6fc:	e0 95       	com	r30
 6fe:	e7 fb       	bst	r30, 7
 700:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_inf>

00000704 <__addsf3x>:
 704:	e9 2f       	mov	r30, r25
 706:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__fp_split3>
 70a:	58 f3       	brcs	.-42     	; 0x6e2 <__addsf3+0xc>
 70c:	ba 17       	cp	r27, r26
 70e:	62 07       	cpc	r22, r18
 710:	73 07       	cpc	r23, r19
 712:	84 07       	cpc	r24, r20
 714:	95 07       	cpc	r25, r21
 716:	20 f0       	brcs	.+8      	; 0x720 <__addsf3x+0x1c>
 718:	79 f4       	brne	.+30     	; 0x738 <__addsf3x+0x34>
 71a:	a6 f5       	brtc	.+104    	; 0x784 <__addsf3x+0x80>
 71c:	0c 94 8d 04 	jmp	0x91a	; 0x91a <__fp_zero>
 720:	0e f4       	brtc	.+2      	; 0x724 <__addsf3x+0x20>
 722:	e0 95       	com	r30
 724:	0b 2e       	mov	r0, r27
 726:	ba 2f       	mov	r27, r26
 728:	a0 2d       	mov	r26, r0
 72a:	0b 01       	movw	r0, r22
 72c:	b9 01       	movw	r22, r18
 72e:	90 01       	movw	r18, r0
 730:	0c 01       	movw	r0, r24
 732:	ca 01       	movw	r24, r20
 734:	a0 01       	movw	r20, r0
 736:	11 24       	eor	r1, r1
 738:	ff 27       	eor	r31, r31
 73a:	59 1b       	sub	r21, r25
 73c:	99 f0       	breq	.+38     	; 0x764 <__addsf3x+0x60>
 73e:	59 3f       	cpi	r21, 0xF9	; 249
 740:	50 f4       	brcc	.+20     	; 0x756 <__addsf3x+0x52>
 742:	50 3e       	cpi	r21, 0xE0	; 224
 744:	68 f1       	brcs	.+90     	; 0x7a0 <__addsf3x+0x9c>
 746:	1a 16       	cp	r1, r26
 748:	f0 40       	sbci	r31, 0x00	; 0
 74a:	a2 2f       	mov	r26, r18
 74c:	23 2f       	mov	r18, r19
 74e:	34 2f       	mov	r19, r20
 750:	44 27       	eor	r20, r20
 752:	58 5f       	subi	r21, 0xF8	; 248
 754:	f3 cf       	rjmp	.-26     	; 0x73c <__addsf3x+0x38>
 756:	46 95       	lsr	r20
 758:	37 95       	ror	r19
 75a:	27 95       	ror	r18
 75c:	a7 95       	ror	r26
 75e:	f0 40       	sbci	r31, 0x00	; 0
 760:	53 95       	inc	r21
 762:	c9 f7       	brne	.-14     	; 0x756 <__addsf3x+0x52>
 764:	7e f4       	brtc	.+30     	; 0x784 <__addsf3x+0x80>
 766:	1f 16       	cp	r1, r31
 768:	ba 0b       	sbc	r27, r26
 76a:	62 0b       	sbc	r22, r18
 76c:	73 0b       	sbc	r23, r19
 76e:	84 0b       	sbc	r24, r20
 770:	ba f0       	brmi	.+46     	; 0x7a0 <__addsf3x+0x9c>
 772:	91 50       	subi	r25, 0x01	; 1
 774:	a1 f0       	breq	.+40     	; 0x79e <__addsf3x+0x9a>
 776:	ff 0f       	add	r31, r31
 778:	bb 1f       	adc	r27, r27
 77a:	66 1f       	adc	r22, r22
 77c:	77 1f       	adc	r23, r23
 77e:	88 1f       	adc	r24, r24
 780:	c2 f7       	brpl	.-16     	; 0x772 <__addsf3x+0x6e>
 782:	0e c0       	rjmp	.+28     	; 0x7a0 <__addsf3x+0x9c>
 784:	ba 0f       	add	r27, r26
 786:	62 1f       	adc	r22, r18
 788:	73 1f       	adc	r23, r19
 78a:	84 1f       	adc	r24, r20
 78c:	48 f4       	brcc	.+18     	; 0x7a0 <__addsf3x+0x9c>
 78e:	87 95       	ror	r24
 790:	77 95       	ror	r23
 792:	67 95       	ror	r22
 794:	b7 95       	ror	r27
 796:	f7 95       	ror	r31
 798:	9e 3f       	cpi	r25, 0xFE	; 254
 79a:	08 f0       	brcs	.+2      	; 0x79e <__addsf3x+0x9a>
 79c:	b0 cf       	rjmp	.-160    	; 0x6fe <__addsf3+0x28>
 79e:	93 95       	inc	r25
 7a0:	88 0f       	add	r24, r24
 7a2:	08 f0       	brcs	.+2      	; 0x7a6 <__addsf3x+0xa2>
 7a4:	99 27       	eor	r25, r25
 7a6:	ee 0f       	add	r30, r30
 7a8:	97 95       	ror	r25
 7aa:	87 95       	ror	r24
 7ac:	08 95       	ret

000007ae <__fixunssfsi>:
 7ae:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__fp_splitA>
 7b2:	88 f0       	brcs	.+34     	; 0x7d6 <__fixunssfsi+0x28>
 7b4:	9f 57       	subi	r25, 0x7F	; 127
 7b6:	98 f0       	brcs	.+38     	; 0x7de <__fixunssfsi+0x30>
 7b8:	b9 2f       	mov	r27, r25
 7ba:	99 27       	eor	r25, r25
 7bc:	b7 51       	subi	r27, 0x17	; 23
 7be:	b0 f0       	brcs	.+44     	; 0x7ec <__fixunssfsi+0x3e>
 7c0:	e1 f0       	breq	.+56     	; 0x7fa <__fixunssfsi+0x4c>
 7c2:	66 0f       	add	r22, r22
 7c4:	77 1f       	adc	r23, r23
 7c6:	88 1f       	adc	r24, r24
 7c8:	99 1f       	adc	r25, r25
 7ca:	1a f0       	brmi	.+6      	; 0x7d2 <__fixunssfsi+0x24>
 7cc:	ba 95       	dec	r27
 7ce:	c9 f7       	brne	.-14     	; 0x7c2 <__fixunssfsi+0x14>
 7d0:	14 c0       	rjmp	.+40     	; 0x7fa <__fixunssfsi+0x4c>
 7d2:	b1 30       	cpi	r27, 0x01	; 1
 7d4:	91 f0       	breq	.+36     	; 0x7fa <__fixunssfsi+0x4c>
 7d6:	0e 94 8d 04 	call	0x91a	; 0x91a <__fp_zero>
 7da:	b1 e0       	ldi	r27, 0x01	; 1
 7dc:	08 95       	ret
 7de:	0c 94 8d 04 	jmp	0x91a	; 0x91a <__fp_zero>
 7e2:	67 2f       	mov	r22, r23
 7e4:	78 2f       	mov	r23, r24
 7e6:	88 27       	eor	r24, r24
 7e8:	b8 5f       	subi	r27, 0xF8	; 248
 7ea:	39 f0       	breq	.+14     	; 0x7fa <__fixunssfsi+0x4c>
 7ec:	b9 3f       	cpi	r27, 0xF9	; 249
 7ee:	cc f3       	brlt	.-14     	; 0x7e2 <__fixunssfsi+0x34>
 7f0:	86 95       	lsr	r24
 7f2:	77 95       	ror	r23
 7f4:	67 95       	ror	r22
 7f6:	b3 95       	inc	r27
 7f8:	d9 f7       	brne	.-10     	; 0x7f0 <__fixunssfsi+0x42>
 7fa:	3e f4       	brtc	.+14     	; 0x80a <__fixunssfsi+0x5c>
 7fc:	90 95       	com	r25
 7fe:	80 95       	com	r24
 800:	70 95       	com	r23
 802:	61 95       	neg	r22
 804:	7f 4f       	sbci	r23, 0xFF	; 255
 806:	8f 4f       	sbci	r24, 0xFF	; 255
 808:	9f 4f       	sbci	r25, 0xFF	; 255
 80a:	08 95       	ret

0000080c <__floatunsisf>:
 80c:	e8 94       	clt
 80e:	09 c0       	rjmp	.+18     	; 0x822 <__floatsisf+0x12>

00000810 <__floatsisf>:
 810:	97 fb       	bst	r25, 7
 812:	3e f4       	brtc	.+14     	; 0x822 <__floatsisf+0x12>
 814:	90 95       	com	r25
 816:	80 95       	com	r24
 818:	70 95       	com	r23
 81a:	61 95       	neg	r22
 81c:	7f 4f       	sbci	r23, 0xFF	; 255
 81e:	8f 4f       	sbci	r24, 0xFF	; 255
 820:	9f 4f       	sbci	r25, 0xFF	; 255
 822:	99 23       	and	r25, r25
 824:	a9 f0       	breq	.+42     	; 0x850 <__floatsisf+0x40>
 826:	f9 2f       	mov	r31, r25
 828:	96 e9       	ldi	r25, 0x96	; 150
 82a:	bb 27       	eor	r27, r27
 82c:	93 95       	inc	r25
 82e:	f6 95       	lsr	r31
 830:	87 95       	ror	r24
 832:	77 95       	ror	r23
 834:	67 95       	ror	r22
 836:	b7 95       	ror	r27
 838:	f1 11       	cpse	r31, r1
 83a:	f8 cf       	rjmp	.-16     	; 0x82c <__floatsisf+0x1c>
 83c:	fa f4       	brpl	.+62     	; 0x87c <__floatsisf+0x6c>
 83e:	bb 0f       	add	r27, r27
 840:	11 f4       	brne	.+4      	; 0x846 <__floatsisf+0x36>
 842:	60 ff       	sbrs	r22, 0
 844:	1b c0       	rjmp	.+54     	; 0x87c <__floatsisf+0x6c>
 846:	6f 5f       	subi	r22, 0xFF	; 255
 848:	7f 4f       	sbci	r23, 0xFF	; 255
 84a:	8f 4f       	sbci	r24, 0xFF	; 255
 84c:	9f 4f       	sbci	r25, 0xFF	; 255
 84e:	16 c0       	rjmp	.+44     	; 0x87c <__floatsisf+0x6c>
 850:	88 23       	and	r24, r24
 852:	11 f0       	breq	.+4      	; 0x858 <__floatsisf+0x48>
 854:	96 e9       	ldi	r25, 0x96	; 150
 856:	11 c0       	rjmp	.+34     	; 0x87a <__floatsisf+0x6a>
 858:	77 23       	and	r23, r23
 85a:	21 f0       	breq	.+8      	; 0x864 <__floatsisf+0x54>
 85c:	9e e8       	ldi	r25, 0x8E	; 142
 85e:	87 2f       	mov	r24, r23
 860:	76 2f       	mov	r23, r22
 862:	05 c0       	rjmp	.+10     	; 0x86e <__floatsisf+0x5e>
 864:	66 23       	and	r22, r22
 866:	71 f0       	breq	.+28     	; 0x884 <__floatsisf+0x74>
 868:	96 e8       	ldi	r25, 0x86	; 134
 86a:	86 2f       	mov	r24, r22
 86c:	70 e0       	ldi	r23, 0x00	; 0
 86e:	60 e0       	ldi	r22, 0x00	; 0
 870:	2a f0       	brmi	.+10     	; 0x87c <__floatsisf+0x6c>
 872:	9a 95       	dec	r25
 874:	66 0f       	add	r22, r22
 876:	77 1f       	adc	r23, r23
 878:	88 1f       	adc	r24, r24
 87a:	da f7       	brpl	.-10     	; 0x872 <__floatsisf+0x62>
 87c:	88 0f       	add	r24, r24
 87e:	96 95       	lsr	r25
 880:	87 95       	ror	r24
 882:	97 f9       	bld	r25, 7
 884:	08 95       	ret

00000886 <__fp_inf>:
 886:	97 f9       	bld	r25, 7
 888:	9f 67       	ori	r25, 0x7F	; 127
 88a:	80 e8       	ldi	r24, 0x80	; 128
 88c:	70 e0       	ldi	r23, 0x00	; 0
 88e:	60 e0       	ldi	r22, 0x00	; 0
 890:	08 95       	ret

00000892 <__fp_nan>:
 892:	9f ef       	ldi	r25, 0xFF	; 255
 894:	80 ec       	ldi	r24, 0xC0	; 192
 896:	08 95       	ret

00000898 <__fp_pscA>:
 898:	00 24       	eor	r0, r0
 89a:	0a 94       	dec	r0
 89c:	16 16       	cp	r1, r22
 89e:	17 06       	cpc	r1, r23
 8a0:	18 06       	cpc	r1, r24
 8a2:	09 06       	cpc	r0, r25
 8a4:	08 95       	ret

000008a6 <__fp_pscB>:
 8a6:	00 24       	eor	r0, r0
 8a8:	0a 94       	dec	r0
 8aa:	12 16       	cp	r1, r18
 8ac:	13 06       	cpc	r1, r19
 8ae:	14 06       	cpc	r1, r20
 8b0:	05 06       	cpc	r0, r21
 8b2:	08 95       	ret

000008b4 <__fp_round>:
 8b4:	09 2e       	mov	r0, r25
 8b6:	03 94       	inc	r0
 8b8:	00 0c       	add	r0, r0
 8ba:	11 f4       	brne	.+4      	; 0x8c0 <__fp_round+0xc>
 8bc:	88 23       	and	r24, r24
 8be:	52 f0       	brmi	.+20     	; 0x8d4 <__fp_round+0x20>
 8c0:	bb 0f       	add	r27, r27
 8c2:	40 f4       	brcc	.+16     	; 0x8d4 <__fp_round+0x20>
 8c4:	bf 2b       	or	r27, r31
 8c6:	11 f4       	brne	.+4      	; 0x8cc <__fp_round+0x18>
 8c8:	60 ff       	sbrs	r22, 0
 8ca:	04 c0       	rjmp	.+8      	; 0x8d4 <__fp_round+0x20>
 8cc:	6f 5f       	subi	r22, 0xFF	; 255
 8ce:	7f 4f       	sbci	r23, 0xFF	; 255
 8d0:	8f 4f       	sbci	r24, 0xFF	; 255
 8d2:	9f 4f       	sbci	r25, 0xFF	; 255
 8d4:	08 95       	ret

000008d6 <__fp_split3>:
 8d6:	57 fd       	sbrc	r21, 7
 8d8:	90 58       	subi	r25, 0x80	; 128
 8da:	44 0f       	add	r20, r20
 8dc:	55 1f       	adc	r21, r21
 8de:	59 f0       	breq	.+22     	; 0x8f6 <__fp_splitA+0x10>
 8e0:	5f 3f       	cpi	r21, 0xFF	; 255
 8e2:	71 f0       	breq	.+28     	; 0x900 <__stack+0x1>
 8e4:	47 95       	ror	r20

000008e6 <__fp_splitA>:
 8e6:	88 0f       	add	r24, r24
 8e8:	97 fb       	bst	r25, 7
 8ea:	99 1f       	adc	r25, r25
 8ec:	61 f0       	breq	.+24     	; 0x906 <__stack+0x7>
 8ee:	9f 3f       	cpi	r25, 0xFF	; 255
 8f0:	79 f0       	breq	.+30     	; 0x910 <__stack+0x11>
 8f2:	87 95       	ror	r24
 8f4:	08 95       	ret
 8f6:	12 16       	cp	r1, r18
 8f8:	13 06       	cpc	r1, r19
 8fa:	14 06       	cpc	r1, r20
 8fc:	55 1f       	adc	r21, r21
 8fe:	f2 cf       	rjmp	.-28     	; 0x8e4 <__fp_split3+0xe>
 900:	46 95       	lsr	r20
 902:	f1 df       	rcall	.-30     	; 0x8e6 <__fp_splitA>
 904:	08 c0       	rjmp	.+16     	; 0x916 <__stack+0x17>
 906:	16 16       	cp	r1, r22
 908:	17 06       	cpc	r1, r23
 90a:	18 06       	cpc	r1, r24
 90c:	99 1f       	adc	r25, r25
 90e:	f1 cf       	rjmp	.-30     	; 0x8f2 <__fp_splitA+0xc>
 910:	86 95       	lsr	r24
 912:	71 05       	cpc	r23, r1
 914:	61 05       	cpc	r22, r1
 916:	08 94       	sec
 918:	08 95       	ret

0000091a <__fp_zero>:
 91a:	e8 94       	clt

0000091c <__fp_szero>:
 91c:	bb 27       	eor	r27, r27
 91e:	66 27       	eor	r22, r22
 920:	77 27       	eor	r23, r23
 922:	cb 01       	movw	r24, r22
 924:	97 f9       	bld	r25, 7
 926:	08 95       	ret

00000928 <__mulsf3>:
 928:	0e 94 a7 04 	call	0x94e	; 0x94e <__mulsf3x>
 92c:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__fp_round>
 930:	0e 94 4c 04 	call	0x898	; 0x898 <__fp_pscA>
 934:	38 f0       	brcs	.+14     	; 0x944 <__mulsf3+0x1c>
 936:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__fp_pscB>
 93a:	20 f0       	brcs	.+8      	; 0x944 <__mulsf3+0x1c>
 93c:	95 23       	and	r25, r21
 93e:	11 f0       	breq	.+4      	; 0x944 <__mulsf3+0x1c>
 940:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_inf>
 944:	0c 94 49 04 	jmp	0x892	; 0x892 <__fp_nan>
 948:	11 24       	eor	r1, r1
 94a:	0c 94 8e 04 	jmp	0x91c	; 0x91c <__fp_szero>

0000094e <__mulsf3x>:
 94e:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__fp_split3>
 952:	70 f3       	brcs	.-36     	; 0x930 <__mulsf3+0x8>

00000954 <__mulsf3_pse>:
 954:	95 9f       	mul	r25, r21
 956:	c1 f3       	breq	.-16     	; 0x948 <__mulsf3+0x20>
 958:	95 0f       	add	r25, r21
 95a:	50 e0       	ldi	r21, 0x00	; 0
 95c:	55 1f       	adc	r21, r21
 95e:	62 9f       	mul	r22, r18
 960:	f0 01       	movw	r30, r0
 962:	72 9f       	mul	r23, r18
 964:	bb 27       	eor	r27, r27
 966:	f0 0d       	add	r31, r0
 968:	b1 1d       	adc	r27, r1
 96a:	63 9f       	mul	r22, r19
 96c:	aa 27       	eor	r26, r26
 96e:	f0 0d       	add	r31, r0
 970:	b1 1d       	adc	r27, r1
 972:	aa 1f       	adc	r26, r26
 974:	64 9f       	mul	r22, r20
 976:	66 27       	eor	r22, r22
 978:	b0 0d       	add	r27, r0
 97a:	a1 1d       	adc	r26, r1
 97c:	66 1f       	adc	r22, r22
 97e:	82 9f       	mul	r24, r18
 980:	22 27       	eor	r18, r18
 982:	b0 0d       	add	r27, r0
 984:	a1 1d       	adc	r26, r1
 986:	62 1f       	adc	r22, r18
 988:	73 9f       	mul	r23, r19
 98a:	b0 0d       	add	r27, r0
 98c:	a1 1d       	adc	r26, r1
 98e:	62 1f       	adc	r22, r18
 990:	83 9f       	mul	r24, r19
 992:	a0 0d       	add	r26, r0
 994:	61 1d       	adc	r22, r1
 996:	22 1f       	adc	r18, r18
 998:	74 9f       	mul	r23, r20
 99a:	33 27       	eor	r19, r19
 99c:	a0 0d       	add	r26, r0
 99e:	61 1d       	adc	r22, r1
 9a0:	23 1f       	adc	r18, r19
 9a2:	84 9f       	mul	r24, r20
 9a4:	60 0d       	add	r22, r0
 9a6:	21 1d       	adc	r18, r1
 9a8:	82 2f       	mov	r24, r18
 9aa:	76 2f       	mov	r23, r22
 9ac:	6a 2f       	mov	r22, r26
 9ae:	11 24       	eor	r1, r1
 9b0:	9f 57       	subi	r25, 0x7F	; 127
 9b2:	50 40       	sbci	r21, 0x00	; 0
 9b4:	9a f0       	brmi	.+38     	; 0x9dc <__mulsf3_pse+0x88>
 9b6:	f1 f0       	breq	.+60     	; 0x9f4 <__mulsf3_pse+0xa0>
 9b8:	88 23       	and	r24, r24
 9ba:	4a f0       	brmi	.+18     	; 0x9ce <__mulsf3_pse+0x7a>
 9bc:	ee 0f       	add	r30, r30
 9be:	ff 1f       	adc	r31, r31
 9c0:	bb 1f       	adc	r27, r27
 9c2:	66 1f       	adc	r22, r22
 9c4:	77 1f       	adc	r23, r23
 9c6:	88 1f       	adc	r24, r24
 9c8:	91 50       	subi	r25, 0x01	; 1
 9ca:	50 40       	sbci	r21, 0x00	; 0
 9cc:	a9 f7       	brne	.-22     	; 0x9b8 <__mulsf3_pse+0x64>
 9ce:	9e 3f       	cpi	r25, 0xFE	; 254
 9d0:	51 05       	cpc	r21, r1
 9d2:	80 f0       	brcs	.+32     	; 0x9f4 <__mulsf3_pse+0xa0>
 9d4:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_inf>
 9d8:	0c 94 8e 04 	jmp	0x91c	; 0x91c <__fp_szero>
 9dc:	5f 3f       	cpi	r21, 0xFF	; 255
 9de:	e4 f3       	brlt	.-8      	; 0x9d8 <__mulsf3_pse+0x84>
 9e0:	98 3e       	cpi	r25, 0xE8	; 232
 9e2:	d4 f3       	brlt	.-12     	; 0x9d8 <__mulsf3_pse+0x84>
 9e4:	86 95       	lsr	r24
 9e6:	77 95       	ror	r23
 9e8:	67 95       	ror	r22
 9ea:	b7 95       	ror	r27
 9ec:	f7 95       	ror	r31
 9ee:	e7 95       	ror	r30
 9f0:	9f 5f       	subi	r25, 0xFF	; 255
 9f2:	c1 f7       	brne	.-16     	; 0x9e4 <__mulsf3_pse+0x90>
 9f4:	fe 2b       	or	r31, r30
 9f6:	88 0f       	add	r24, r24
 9f8:	91 1d       	adc	r25, r1
 9fa:	96 95       	lsr	r25
 9fc:	87 95       	ror	r24
 9fe:	97 f9       	bld	r25, 7
 a00:	08 95       	ret

00000a02 <strcpy>:
 a02:	fb 01       	movw	r30, r22
 a04:	dc 01       	movw	r26, r24
 a06:	01 90       	ld	r0, Z+
 a08:	0d 92       	st	X+, r0
 a0a:	00 20       	and	r0, r0
 a0c:	e1 f7       	brne	.-8      	; 0xa06 <strcpy+0x4>
 a0e:	08 95       	ret

00000a10 <_exit>:
 a10:	f8 94       	cli

00000a12 <__stop_program>:
 a12:	ff cf       	rjmp	.-2      	; 0xa12 <__stop_program>
